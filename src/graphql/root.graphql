scalar Date

type Query {
  health: String!
  habits: [Habit]!
  habit(id: ID!): Habit
}

input CreateHabit {
  title: String!
  description: String
}

type Mutation {
  createHabit(input: CreateHabit): Habit!
  markHabitCompleted(habitId: ID!, date: Date): HabitLog!
  markHabitUncompleted(habitId: ID!, date: Date): HabitLog!
}

type Habit {
  id: ID!
  title: String!
  description: String
  createdAt: Date!
  logs: [HabitLog!]!
}

type HabitLog {
  id: ID!
  habitId: ID!
  date: Date!
  completed: Boolean!
  createdAt: Date!
}
